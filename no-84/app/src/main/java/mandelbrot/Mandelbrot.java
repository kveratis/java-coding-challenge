package mandelbrot;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import java.io.File;
import java.util.concurrent.Callable;

import picocli.CommandLine;
import picocli.CommandLine.Command;
import picocli.CommandLine.Option;

@Command(name = "mandelbrot", mixinStandardHelpOptions = true, version = "mandelbrot 1.0", description = "This challenge is to build your own application layer load balancer")
public class Mandelbrot implements Callable<Result> {

    public static int _verbose = 0;
    public static boolean verbose() {
        return _verbose >= 1;
    }
    public static boolean verbose2() {
        return _verbose >= 2;
    }
    public static void main(String[] args) {
        var mandelbrot = new Mandelbrot();
        var cmd = new CommandLine(mandelbrot);
        var exitCode = cmd.execute(args);
        Result result = cmd.getExecutionResult();
        if (result != null && result.toString() != null) {
            System.exit(exitCode);
        }
    }

    @Option(names = "-v", description = "verbose model level 1")
    boolean verbose = false;

    @Option(names = "-vv", description = "verbose model level 2")
    boolean verbose2 = false;

    @Option(names = "-w", description = "width in pixel - default 400px")
    int width = 400;

    @Option(names = "-i", description = "max iterations - default 100")
    int maxIterations = 100;

    @Option(names = "-d", description = "dpi in pixel - default 72dpi")
    int dpi = 72;

    @Option(names = "-o", description = "outpuf file name - default mandelbrot.png")
    String outputFileName = "mandelbrot.png";

    @Override
    public Result call() throws Exception {
        if (this.verbose) _verbose = 1;
        if (this.verbose2) _verbose = 2;
        new MandelbrotExplorer(this.maxIterations, this.width, this.dpi, this.outputFileName).run();
        return new Result();
    }
}